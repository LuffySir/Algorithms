#  Given two strings s and t which consist of only lowercase letters.

# String t is generated by random shuffling string s and then add one more letter at a random position.

# Find the letter that was added in t.
import collections


class Solution(object):
    # 自己的方法，超时
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        s_dict = {}
        t_dict = {}
        for alpha in s:
            s_dict[alpha] = s_dict.get(alpha, 0) + 1
        for alpha in t:
            t_dict[alpha] = t_dict.get(alpha, 0) + 1
        for alpha in t_dict:
            if t_dict[alpha] - s_dict[alpha] == 1:
                return alpha

    """
    dictionary
    """

    def findTheDifference(self, s, t):
        dic = {}
        for ch in s:
            dic[ch] = dic.get(ch, 0) + 1
        for ch in t:
            if dic.get(ch, 0) == 0:
                return ch
            else:
                dic[ch] -= 1

    """
    difference 先把字母转化成数值，再将多出来的数值转化成字母
    """

    def findTheDifference(self, s, t):
        diff = 0
        for i in range(len(s)):
            diff -= ord(s[i])
            diff += ord(t[i])
        diff += ord(t[-1])
        return chr(diff)

    """
    xor
    """

    def findTheDifference(self, s, t):
        code = 0
        for ch in s + t:
            code ^= ord(ch)
        return chr(code)

    # 统计每个字母的数量
    def findTheDifference(self, s, t):
        return list((collections.Counter(t) - collections.Counter(s)))[0]
